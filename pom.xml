<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">



<!--    <properties>-->
<!--        <maven.compiler.source>8</maven.compiler.source>-->
<!--        <maven.compiler.target>8</maven.compiler.target>-->
<!--    </properties>-->

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.gauge.docdocker</groupId>
    <artifactId>gauge_doc_docker</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
<!--    <packaging>war</packaging>-->
    <name>gauge_doc_docker</name>
    <url>http://maven.apache.org</url>
    <properties>
        <jdk.version>1.8</jdk.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.gauge.docdocker</groupId>
                <artifactId>docdocker-viewmodel</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Dalston.SR1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>1.5.4.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.0.4</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.0.31</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>1.3.0</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-tomcat</artifactId>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <finalName>gauge_doc_docker</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-resources-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <delimiters>-->
<!--                        <delimiter>$</delimiter>-->
<!--                    </delimiters>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <source>${jdk.version}</source>-->
<!--                    <target>${jdk.version}</target>-->
<!--                    <encode>${project.build.sourceEncoding}</encode>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- 没有web.xml文件的情况下构建WAR -->
<!--            <plugin>-->
<!--                <artifactId>maven-war-plugin</artifactId>-->
<!--                <version>3.0.0</version>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

<!--            <plugin>-->
<!--                <artifactId>maven-war-plugin</artifactId>-->
<!--                <version>2.6</version>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash;如果想在没有web.xml文件的情况下构建WAR，请设置为false。&ndash;&gt;-->
<!--                    <failOnMissingWebXml>false</failOnMissingWebXml>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>
    <modules>
<!--        <module>docdocker-viewmodel</module>-->
<!--        <module>gauge_doc_docker-service</module>-->
<!--        <module>gauge_doc_docker-provider-hystrix-8001</module>-->
<!--        <module>gauge_doc_docker-provider-dept-8001</module>-->
<!--        <module>gauge_doc_docker-provider-dept-8002</module>-->
<!--        <module>gauge_doc_docker-provider-dept-8003</module>-->
<!--        <module>gauge_doc_docker-consumer-80</module>-->
<!--        <module>gauge_doc_docker-consumer-ribbon</module>-->
<!--        <module>gauge_doc_docker-consumer-feign</module>-->
<!--        <module>gauge_doc_docker-consumer-hystrix</module>-->
<!--        <module>gauge_doc_docker-security</module>-->
<!--        <module>gauge_doc_docker-eureka-server</module>-->
<!--        <module>gauge_doc_docker-eureka-7001</module>-->
<!--        <module>gauge_doc_docker-eureka-7002</module>-->
<!--        <module>gauge_doc_docker-eureka-7003</module>-->
        <module>docdocker-provider-coolapi-21201</module>
        <module>docdocker-consumer-666</module>

    </modules>
</project>


